language: c
sudo: true

branches:
  only:
    - master
    - dev

before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then find /usr/local/Homebrew \! -regex ".+\.git.+" -delete; fi
# Credit https://discourse.brew.sh/t/best-practice-for-homebrew-on-travis-brew-update-is-5min-to-build-time/5215/9
# Cache only .git files under "/usr/local/Homebrew" so "brew update" does not take 5min every build

cache:
  directories:
    - $HOME/Library/Caches/Homebrew
    - /usr/local/Homebrew

matrix:
  include:

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gfortran-9
            - libmpich-dev
            - mpich
      script:
        - pmRootDir="$(pwd)"
        - pmBinDir="${pmRootDir}/bin/"
        - echo "pmRootDir = ${pmRootDir}"
        - echo "pmBinDir = ${pmBinDir}"
        - if ! [ -d "${pmBinDir}" ]; then mkdir -p ${pmRootDir}/bin/; fi
        - echo "$(dpkg -L libopenmpi-dev)"
        - echo "$(dpkg -L mpich)"
        - MPIEXEC_PATH="$(dpkg -L mpich | egrep bin/mpiexec.mpich)"
        - MPI_BIN_DIR="$(dirname "${MPIEXEC_PATH}")"
        - PATH="${MPI_BIN_DIR}:${PATH}"
        - "wget https://github.com/cdslaborg/paramonte/releases/latest/download/libparamonte_c_linux_x64_gnu_release_dynamic_heap_mpi.tar.gz"
        - "wget https://github.com/cdslaborg/paramonte/releases/latest/download/libparamonte_cpp_linux_x64_gnu_release_dynamic_heap_mpi.tar.gz"
        - "wget https://github.com/cdslaborg/paramonte/releases/latest/download/libparamonte_fortran_linux_x64_gnu_release_dynamic_heap_mpi.tar.gz"
        - ls libparamonte*.tar.gz* | xargs -i tar xvzf {}
        - cd libparamonte_c_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2 && cd ..
        - cd libparamonte_cpp_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2 && cd ..
        - cd libparamonte_fortran_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2 && cd ..

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - gfortran-9
            - libblas-dev
            - liblapack-dev
            - libopenmpi-dev
            - openmpi-bin
            #- mpich
            #- libmpich-dev
            #- libblas-dev
            #- liblapack-dev
            #- libopenmpi-dev
            #- openmpi-bin
      script:
        #- chmod +x ./.travis/install_cmake.sh && ./.travis/install_cmake.sh
        #- export PATH="/usr/local/cmake-3.16.3/bin:${PATH}"
        #- echo "The MPIEXEC binary path: $(which mpiexec)" || echo "MPI library not found...skipping"
        #- ls /usr/bin/
        #- echo "$(( IFS=:; for p in $PATH; do unset lsout; lsout=$(ls -dm "$p"/*mpifort*); if ! [[ -z "${lsout// }" ]]; then echo "${lsout}, "; fi; done ) 2>/dev/null)"
        #- echo "$(( IFS=:; for p in $PATH; do unset lsout; lsout=$(ls -dm "$p"/*mpicc*); if ! [[ -z "${lsout// }" ]]; then echo "${lsout}, "; fi; done ) 2>/dev/null)"
        #- sudo apt install openmpi-bin
        #- echo $(which mpicc)
        #- echo $(which mpif90)
        #- echo $(which mpifort)
        #- echo $(which mpiexec)
        #- echo $(which mpirun)
        #- mpiexecFlag="$(command -v mpiexec.openmpi)"
        #- if [ -f "${mpiexecFlag}" ]; then mpiexecFlag="--mpiexec ${mpiexecFlag}"; else unset mpiexecFlag; echo "mpiexec not found..."; fi
        #- echo "mpiexecFlag = ${mpiexecFlag}"
        - echo "FCFLAG = ${FCFLAG}"
        - cmake --version || echo "cmake not found..."
        - gfortran --version && FCFLAG="-f $(which gfortran)" || echo "gfortran not found..."
        - gfortran-9 --version && FCFLAG="-f $(which gfortran-9)" || echo "gfortran-9 not found..."
        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par "none" --yes-to-all ${FCFLAG} ${mpiexecFlag}
        - pmRootDir="$(pwd)"
        - ls ${pmRootDir}/bin/
        - cd ${pmRootDir}/bin/libparamonte_c_linux_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        - cd ${pmRootDir}/bin/libparamonte_cpp_linux_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        - cd ${pmRootDir}/bin/libparamonte_fortran_linux_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        #- cd ${pmRootDir}/bin/libparamonte_c_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
        #- cd ${pmRootDir}/bin/libparamonte_cpp_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
        #- cd ${pmRootDir}/bin/libparamonte_fortran_linux_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2

    - &macOS
      os: osx
      osx_image: xcode12
      addons:
        homebrew:
          packages:
            - cmake
            - mpich
            - gcc@10
            - shellcheck
          update: true
      before_install:
        - brew install gcc@10 || brew upgrade gcc
        - brew install cmake || brew upgrade cmake
        - brew install mpich || brew upgrade mpich
        - brew link gcc
        - brew link cmake
        - brew link mpich
      script:
        - cmake --version
        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par "none mpi" #-s gnu
        - pmRootDir=$(pwd)
        - ls ${pmRootDir}/bin/
        - cd ${pmRootDir}/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        - cd ${pmRootDir}/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        - cd ${pmRootDir}/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap && ls && ./build.sh && ./run.sh
        - cd ${pmRootDir}/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap_mpi && ls && ./build.sh && ./run.sh --nproc 2
        - cd ${pmRootDir}/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap_mpi && ls && ./build.sh && ./run.sh --nproc 2
        - cd ${pmRootDir}/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap_mpi && ls && ./build.sh && ./run.sh --nproc 2

#    - &macOS
#      os: osx
#      osx_image: xcode11
#      env:
#          GCC=9
#          CC=gcc-9
#          CXX=g++-9
#          FC=gfortran-9
#      addons:
#        homebrew:
#          packages:
#            - gcc@9
#            - cmake
#            - openmpi
#            - shellcheck
#          update: true
#      before_install:
#        - brew install gcc@9 || brew upgrade gcc
#        - brew install cmake || brew upgrade cmake
#        - brew install openmpi || brew upgrade openmpi
#        - brew link gcc
#        - brew link cmake
#        - brew link openmpi
#      script:
#        - cmake --version
#        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par "none mpi" #-s gnu
#        - echo $(pwd)
#        - pmRootDir="$(pwd)";
#        - cd ${pmRootDir}/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        - cd ${pmRootDir}/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        - cd ${pmRootDir}/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        - cd ${pmRootDir}/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
#        - cd ${pmRootDir}/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
#        - cd ${pmRootDir}/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2

#    - &ubuntu
#      os: linux
#      sudo: true
#      dist: xenial
#      cache:
#        apt: true
#        directories:
#          - "$CACHE"
#      addons:
#        apt:
#          sources: &linuxsrcs
#            - ubuntu-toolchain-r-test
#            - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
#              key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
#          packages: &gcc10pkgs
#            - gcc
#            - g++
#            - cmake
#            - mpich
#            - gfortran-8
#      script:
#        #- chmod +x ./.travis/install_cmake.sh && ./.travis/install_cmake.sh
#        - cmake --version
#        - gfortran --version
#        - gfortran-8 --version
#        #- echo >&2 "The MPIEXEC binday path: $(which mpiexec) || echo >&2 "MPI library not found...skipping"
#        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par "none" --yes-to-all
#        - cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        - cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        - cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap && ./build.sh && ./run.sh
#        #- cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_c_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
#        #- cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_cpp_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2
#        #- cd /Users/travis/build/cdslaborg/paramonte/bin/libparamonte_fortran_darwin_x64_gnu_release_dynamic_heap_mpi && ./build.sh && ./run.sh --nproc 2

#    - os: linux
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - mpich
#            - gfortran-8
#      script:
#        - chmod +x ./.travis/install_cmake.sh && ./.travis/install_cmake.sh
#        - export FC=gfortran-8
#        - cmake --version
#        - gfortran-8 --version
#        - echo >&2 "The MPIEXEC binday path: $(which mpiexec) || echo >&2 "MPI library not found...skipping"
#        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par none
#        #- ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par none --fortran $(which gfortran-8) --mpiexec $(which mpiexec) --yes-to-all

#    - name: "darwin"
#      os: osx
#      osx_image: xcode10
#      addons:
#        homebrew:
#          packages:
#            - gcc
#            - cmake
#            - openmpi
#            - update: true
      #before_install:
        #- brew install gcc || brew upgrade gcc
        #- brew install cmake || brew upgrade cmake
        #- brew install openmpi || brew upgrade openmpi
        #- brew link openmpi
#      script:
#        - brew link gcc
#        - brew link cmake
#        - cmake --version
#        - ./install.sh --lang "C C++ Fortran" --build release --lib dynamic --mem heap --par "none mpi" -s gnu

#    - os: osx
#      script:
#        - wget "https://github.com/cdslaborg/paramonte/releases/download/v1.4.0/libparamonte_c_darwin_x64_gnu_release_dynamic_heap.tar.gz"
#        - tar xvzf libparamonte_c_darwin_x64_gnu_release_dynamic_heap.tar.gz
#        - cd libparamonte_c_darwin_x64_gnu_release_dynamic_heap
#        - ./build.sh
#        - ./run.sh
